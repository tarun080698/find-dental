name: Deployment of Frontend

on:
  push:
    branches:
      - dev
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push container image to registry
        uses: docker/build-push-action@v2
        with:
          context: ./client
          push: true
          tags: index.docker.io/${{ secrets.DOCKER_USERNAME }}/find-dental:${{ github.sha }}
          # file: ./client/Dockerfile

      # - name: build docker image
      #   run: docker build -t tarun1998/find-dental .

      # - name: publihs image to docker hub
      #   run: docker push tarun1998/find-dental:latest
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    steps:
      - name: Login to AWS
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          # aws-region: ${{ secrets.AWS_REGION }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Pull docker image
        run: docker pull ${{ secrets.DOCKER_USERNAME }}/find-dental:${{ github.sha }}

      - name: Run docker image
        # run: docker run -p 80:80 ${{ secrets.DOCKER_USERNAME }}/find-dental:${{ github.sha }}
        run: docker run -p 3000:80 ${{ secrets.DOCKER_USERNAME }}/find-dental:${{ github.sha }}
      # - id: deploy
      #   uses: bitovi/github-actions-deploy-docker-to-ec2@v1.0.1
      #   with:
      #     aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
      #     aws_secret_access_key: ${{ secrets.AWS_SECRET_KEY }}
      #     aws_default_region: us-east-1

      #     aws_elb_app_port: 8080
